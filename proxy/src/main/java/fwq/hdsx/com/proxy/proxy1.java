package fwq.hdsx.com.proxy;

/**
 * 技术周分享之代理模式  梁铖城
 */
public class proxy1 {

    // TODO: 16/3/22 ===========什么时候使用代理模式啊？===========

    //http://zhidao.baidu.com/link?url=TfS_Pm17nLpJWXE428JsDCQuk1PeJMDGZwr7m3sEZ-EyRaeTF7dfrn4TjVccRcX9BqisKaGkmNZLd95LKM5Vp_

    // TODO: 16/3/22 ===========什么是代理模式？=================

    //基本概念 代理模式(Proxy)：为其他对象提供一种代理以控制对这个对象的访问。
    //代理者可以作任何东西的接口：网络连接、内存中的大物件、档案或其它昂贵或无法复制的资源。

//     简单说：
//     在对已有的方法进行使用的时候需要对原有方法进行改进或者修改，这时候有两种改进选择：
//     修改原有方法来适应现在的使用方式，或者使用一个"第三者"方法来调用原有的方法，
//     并且对方法产生的结果进行一定的控制。第一种方法明显违背了"对扩展开放、对修改关闭"的开闭原则，
//     而且在原有方法中进行修改可能使得原来类的功能变得模糊和多元化，
//     而使用第二种方式可以将功能划分得更加清晰，有助于后面的维护。
//     所以在一定程度上第二种方式是一个比较好的选择！这就是代理模式。

    // TODO: 16/3/22 ============代理模式分哪几种？===============

    /*  0远程（Remote）代理：为一个位于不同的地址空间的对象提供一个局域代表对象。这个不同的地址空间可以在本机器中，

        也可以在另一台机器中。远程代理又叫做大使（Ambassador）。

        1 虚拟（Virtual）代理：根据需要创建一个资源消耗较大的对象，使得此对象只在需要时才会被真正创建。

        2 Copy-on-Write代理：虚拟代理的一种。把复制（克隆）拖延到只有在客户端需要时才真正采取行动。

        3 保护（Protect or Access）代理：控制对一个对象的访问，如果需要，可以给不同的用户提供不同级别的使用权限。

        4 Cache代理：为某一个目标操作的结果提供临时的存储空间，以便多个客户端可以共享这些结果。

        5 防火墙（Firewall）代理：保护目标，不让恶意用户接近。

        6 同步化（Synchronization）代理：使几个用户能够同时使用一个对象而没有冲突。

        7 智能引用（Smart Reference）代理：当一个对象被引用时，提供一些额外的操作，比如将对此对象调用的次数记录下来等。

        8 在所有种类的代理模式中，虚拟（Virtual）代理、远程（Remote）代理、智能引用代理（Smart Reference Proxy）

          和保护（Protect or Access）代理是最为常见的代理模式。*/

}
